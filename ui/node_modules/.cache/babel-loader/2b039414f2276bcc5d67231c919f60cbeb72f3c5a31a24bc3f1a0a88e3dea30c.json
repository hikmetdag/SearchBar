{"ast":null,"code":"import { modifiers as modifierKeys, ALL_KEYS, ALL_PRINTABLE_KEYS } from './keys';\nvar PRINTABLE_CHARACTERS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~!@#$%^&*()-_+=[]\\\\{}|;\\':\",./<>?£';\nvar modKeys = Object.keys(modifierKeys);\nfunction matchKeys(_ref) {\n  var keySet = _ref.keySet,\n    event = _ref.event;\n  var key = keySet.key,\n    _keySet$modifiers = keySet.modifiers,\n    modifiers = _keySet$modifiers === undefined ? [] : _keySet$modifiers;\n  var keysMatch = void 0;\n  keysMatch = key === ALL_KEYS;\n  if (key === ALL_PRINTABLE_KEYS) {\n    if (event.key) {\n      // Modern browsers implement `key`, so if `key` is length 1, we have a match. e.g. 'a' for the\n      // a key, or '2' for the 2 key. All other non-printable characters have names, e.g. 'Enter' or 'Backspace'.\n      keysMatch = event.key.length === 1;\n    } else {\n      // For browsers that do no support `event.key`, we test against a list of characters\n      var pressedChar = String.fromCharCode(event.charCode);\n      keysMatch = PRINTABLE_CHARACTERS.indexOf(pressedChar) >= 0;\n    }\n  }\n  if (key === event.which) {\n    var evtModKeys = modKeys.filter(function (modKey) {\n      return event[modKey + 'Key'];\n    }).sort();\n    keysMatch = modifiers.length === evtModKeys.length && modifiers.every(function (modKey, index) {\n      return evtModKeys[index] === modKey;\n    });\n  }\n  return keysMatch;\n}\nexport default matchKeys;","map":{"version":3,"names":["modifiers","modifierKeys","ALL_KEYS","ALL_PRINTABLE_KEYS","PRINTABLE_CHARACTERS","modKeys","Object","keys","matchKeys","_ref","keySet","event","key","_keySet$modifiers","undefined","keysMatch","length","pressedChar","String","fromCharCode","charCode","indexOf","which","evtModKeys","filter","modKey","sort","every","index"],"sources":["/Users/hackyourfuture/Desktop/searchbar/ui/node_modules/react-keydown/es/lib/match_keys.js"],"sourcesContent":["import { modifiers as modifierKeys, ALL_KEYS, ALL_PRINTABLE_KEYS } from './keys';\n\nvar PRINTABLE_CHARACTERS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~!@#$%^&*()-_+=[]\\\\{}|;\\':\",./<>?£';\n\nvar modKeys = Object.keys(modifierKeys);\n\nfunction matchKeys(_ref) {\n  var keySet = _ref.keySet,\n      event = _ref.event;\n  var key = keySet.key,\n      _keySet$modifiers = keySet.modifiers,\n      modifiers = _keySet$modifiers === undefined ? [] : _keySet$modifiers;\n\n  var keysMatch = void 0;\n\n  keysMatch = key === ALL_KEYS;\n\n  if (key === ALL_PRINTABLE_KEYS) {\n    if (event.key) {\n      // Modern browsers implement `key`, so if `key` is length 1, we have a match. e.g. 'a' for the\n      // a key, or '2' for the 2 key. All other non-printable characters have names, e.g. 'Enter' or 'Backspace'.\n      keysMatch = event.key.length === 1;\n    } else {\n      // For browsers that do no support `event.key`, we test against a list of characters\n      var pressedChar = String.fromCharCode(event.charCode);\n      keysMatch = PRINTABLE_CHARACTERS.indexOf(pressedChar) >= 0;\n    }\n  }\n\n  if (key === event.which) {\n    var evtModKeys = modKeys.filter(function (modKey) {\n      return event[modKey + 'Key'];\n    }).sort();\n    keysMatch = modifiers.length === evtModKeys.length && modifiers.every(function (modKey, index) {\n      return evtModKeys[index] === modKey;\n    });\n  }\n\n  return keysMatch;\n}\n\nexport default matchKeys;"],"mappings":"AAAA,SAASA,SAAS,IAAIC,YAAY,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,QAAQ;AAEhF,IAAIC,oBAAoB,GAAG,kGAAkG;AAE7H,IAAIC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC;AAEvC,SAASO,SAASA,CAACC,IAAI,EAAE;EACvB,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;IACpBC,KAAK,GAAGF,IAAI,CAACE,KAAK;EACtB,IAAIC,GAAG,GAAGF,MAAM,CAACE,GAAG;IAChBC,iBAAiB,GAAGH,MAAM,CAACV,SAAS;IACpCA,SAAS,GAAGa,iBAAiB,KAAKC,SAAS,GAAG,EAAE,GAAGD,iBAAiB;EAExE,IAAIE,SAAS,GAAG,KAAK,CAAC;EAEtBA,SAAS,GAAGH,GAAG,KAAKV,QAAQ;EAE5B,IAAIU,GAAG,KAAKT,kBAAkB,EAAE;IAC9B,IAAIQ,KAAK,CAACC,GAAG,EAAE;MACb;MACA;MACAG,SAAS,GAAGJ,KAAK,CAACC,GAAG,CAACI,MAAM,KAAK,CAAC;IACpC,CAAC,MAAM;MACL;MACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,YAAY,CAACR,KAAK,CAACS,QAAQ,CAAC;MACrDL,SAAS,GAAGX,oBAAoB,CAACiB,OAAO,CAACJ,WAAW,CAAC,IAAI,CAAC;IAC5D;EACF;EAEA,IAAIL,GAAG,KAAKD,KAAK,CAACW,KAAK,EAAE;IACvB,IAAIC,UAAU,GAAGlB,OAAO,CAACmB,MAAM,CAAC,UAAUC,MAAM,EAAE;MAChD,OAAOd,KAAK,CAACc,MAAM,GAAG,KAAK,CAAC;IAC9B,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACTX,SAAS,GAAGf,SAAS,CAACgB,MAAM,KAAKO,UAAU,CAACP,MAAM,IAAIhB,SAAS,CAAC2B,KAAK,CAAC,UAAUF,MAAM,EAAEG,KAAK,EAAE;MAC7F,OAAOL,UAAU,CAACK,KAAK,CAAC,KAAKH,MAAM;IACrC,CAAC,CAAC;EACJ;EAEA,OAAOV,SAAS;AAClB;AAEA,eAAeP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}